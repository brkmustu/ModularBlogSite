version: '3.4'

services:
  publicapigateway.host:
    image: ${DOCKER_REGISTRY-}publicapigatewayhost
    build:
      context: .
      dockerfile: src/Gateways/PublicApiGateway.Host/Dockerfile
    depends_on:
      - "mongo"
      - "postgresql-master"
    networks:
      - blogsite-network

  managementmodule.webapi:
    image: ${DOCKER_REGISTRY-}managementmodulewebapi
    build:
      context: .
      dockerfile: src/ManagementModule/ManagementModule.WebApi/Dockerfile
    depends_on:
      - "mongo"
      - "postgresql-master"
      - "s_consul"
      - "rabbitmq"
    networks:
      - blogsite-network

  userportalmodule.webapi:
    image: ${DOCKER_REGISTRY-}userportalmodulewebapi
    build:
      context: .
      dockerfile: src/UserPortalModule/UserPortalModule.WebApi/Dockerfile
    depends_on:
      - "mongo"
      - "postgresql-master"
      - "s_consul"
      - "rabbitmq"
    networks:
      - blogsite-network

  managementmodule.eventprocessor:
    image: ${DOCKER_REGISTRY-}managementmoduleeventprocessor
    build:
      context: .
      dockerfile: src/ManagementModule/ManagementModule.EventProcessor/Dockerfile
    depends_on:
      - "mongo"
      - "postgresql-master"
      - "rabbitmq"
    networks:
      - blogsite-network

  userportalmodule.eventprocessor:
    image: ${DOCKER_REGISTRY-}userportalmoduleeventprocessor
    build:
      context: .
      dockerfile: src/UserPortalModule/UserPortalModule.EventProcessor/Dockerfile
    depends_on:
      - "mongo"
      - "postgresql-master"
      - "rabbitmq"
    networks:
      - blogsite-network

  postgresql-master:
    image: docker.io/bitnami/postgresql:14
    volumes:
      - 'vol_app_db:/bitnami/postgresql'
    networks:
      - blogsite-network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    volumes:
      - 'vol_pgadmin:/var/lib/pgadmin'
    restart: unless-stopped
    networks:
      - blogsite-network

  s_consul:
    container_name: c_consul
    image: consul
    networks:
      - blogsite-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_VHOST=mbs
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=123456
    volumes:
        - vol_rabbitmq_data:/var/lib/rabbitmq/
        - vol_rabbitmq_log:/var/log/rabbitmq
    networks:
      - blogsite-network

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    networks:
      - blogsite-network

  mongoexpress:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017
    networks:
      - blogsite-network

volumes:
  vol_rabbitmq_data:
  vol_rabbitmq_log:
  vol_app_db:
  vol_pgadmin:

networks:
  blogsite-network:
    driver: bridge
